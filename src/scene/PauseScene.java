package scene;

// Start of user code for imports
import java.util.*;

import org.minueto.MinuetoColor;
import org.minueto.image.MinuetoFont;
import org.minueto.image.MinuetoImage;
import org.minueto.image.MinuetoText;
import org.minueto.window.MinuetoWindow;
// End of user code

import game.Assets;
import interactive.KeyboardHandler;
import interactive.Keys;

/**
 * PauseScene class definition.
 * Generated by the TouchCORE code generator.
 */
class PauseScene extends Scene {
    
    protected long tick;
    protected int currentOption;
    protected ArrayList<MinuetoImage> options;
	private MinuetoImage pointer;
    
    public PauseScene() {
    	options = new ArrayList<MinuetoImage>();
    	currentOption = 1;
    	tick = 0;
    	this.init();
    }

    boolean removeOptions(MinuetoImage a) {
        int size = options.size();
        if (size == 0) {
            return false;
        }
        boolean removed = options.remove(a);
        return removed;
    }

    boolean addOptionsAt(int index, MinuetoImage a) {
        options.add(index, a);
        return true;
    }

    boolean removeOptionsAt(int index) {
        int size = options.size();
        if (size == 0) {
            return false;
        }
        MinuetoImage removedElement = options.remove(index);
        boolean result = removedElement != null;
        return result;
    }

    MinuetoImage getOptionsAt(int index) {
        MinuetoImage associated = options.get(index);
        return associated;
    }

    boolean addOptions(MinuetoImage a) {
        boolean added = options.add(a);
        return added;
    }

    boolean containsOptions(MinuetoImage a) {
        boolean contains = options.contains(a);
        return contains;
    }

    int sizeOfOptions() {
        int size = options.size();
        return size;
    }


    public void update() {
        handleInput();
    }

    public void init() {
		MinuetoFont fontTitle = new MinuetoFont("Arial",115,false, false); 
		this.addOptions(new MinuetoText("Pause", fontTitle, MinuetoColor.WHITE,true));
		
		MinuetoFont fontSelection = new MinuetoFont("Arial",30,false, false);
		MinuetoText selection = new MinuetoText("Resume", fontSelection, MinuetoColor.WHITE,true);
		this.addOptions(selection);
		selection = new MinuetoText("Exit", fontSelection, MinuetoColor.WHITE,true);
		this.addOptions(selection);
		
		this.setPointer(Assets.getEntityTexturesAt(0));
    }

    public void draw(MinuetoWindow w) {
    	MinuetoColor white = new MinuetoColor(0, 0, 0);
        w.clear(MinuetoColor.BLACK);
        w.draw(this.getOptionsAt(0), 0, 75);
        MinuetoImage toDraw = getOptionsAt(1);
        w.draw(toDraw, 250, 260);
        toDraw = getOptionsAt(2);
        w.draw(toDraw, 250, 310);
        if (currentOption == 1) {
            w.draw(this.pointer, 230, 270);
        } else if (currentOption == 2) {
            w.draw(this.pointer, 230, 320);
        }
    }

    public void handleInput() {
        if (KeyboardHandler.isPressed(Keys.DOWN) && currentOption < options.size() - 1) {
            this.currentOption = currentOption + 1;
        }
        if (KeyboardHandler.isPressed(Keys.UP) && currentOption > 1) {
            this.currentOption = currentOption - 1;
        }
        if (KeyboardHandler.isPressed(Keys.ENTER)) {
            selectOption();
        }
    }
    
    boolean setPointer(MinuetoImage newObject) {
        this.pointer = newObject;
        return true;
    }
    
    public void selectOption() {
        if (currentOption == 1) {
            SceneManager sM = SceneManager.getInstance();
            sM.setPaused(false);
        } else if (currentOption == 2) {
            System.exit(0);
        }
    }
}
