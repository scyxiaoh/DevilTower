package game;

// Start of user code for imports
import java.util.*;
import org.minueto.image.MinuetoImage;
// End of user code

/**
 * Assets class definition.
 * Generated by the TouchCORE code generator.
 */
public class Assets {
    
    protected ArrayList<MinuetoImage> tileTextures;
    protected ArrayList<MinuetoImage> entityTextures;
    protected ArrayList<MinuetoImage> playerTextures;
    
    public Assets() {
        /* TODO: No message view defined */
    }

    static boolean addTileTexturesAt(int index, MinuetoImage a) {
        boolean contains = tileTextures.contains(a);
        if (contains) {
            return false;
        }
        tileTextures.add(index, a);
        return true;
    }

    static boolean removeTileTexturesAt(int index) {
        MinuetoImage removedElement = tileTextures.remove(index);
        boolean result = removedElement != null;
        return result;
    }

    static MinuetoImage getTileTexturesAt(int index) {
        MinuetoImage associated = tileTextures.get(index);
        return associated;
    }

    static boolean addTileTextures(MinuetoImage a) {
        boolean contains = tileTextures.contains(a);
        if (contains) {
            return false;
        }
        boolean added = tileTextures.add(a);
        return added;
    }

    static boolean removeTileTextures(MinuetoImage a) {
        boolean removed = tileTextures.remove(a);
        return removed;
    }

    Assets() {
        
    }

    static boolean containsTileTextures(MinuetoImage a) {
        boolean contains = tileTextures.contains(a);
        return contains;
    }

    static int sizeOfTileTextures() {
        int size = tileTextures.size();
        return size;
    }

    static ArrayList<MinuetoImage> getTileTextures() {
        return this.tileTextures;
    }

    static boolean addEntityTexturesAt(int index, MinuetoImage a) {
        boolean contains = entityTextures.contains(a);
        if (contains) {
            return false;
        }
        entityTextures.add(index, a);
        return true;
    }

    static boolean removeEntityTexturesAt(int index) {
        MinuetoImage removedElement = entityTextures.remove(index);
        boolean result = removedElement != null;
        return result;
    }

    static MinuetoImage getEntityTexturesAt(int index) {
        MinuetoImage associated = entityTextures.get(index);
        return associated;
    }

    static boolean addEntityTextures(MinuetoImage a) {
        boolean contains = entityTextures.contains(a);
        if (contains) {
            return false;
        }
        boolean added = entityTextures.add(a);
        return added;
    }

    static boolean removeEntityTextures(MinuetoImage a) {
        boolean removed = entityTextures.remove(a);
        return removed;
    }

    Assets() {
        
    }

    static boolean containsEntityTextures(MinuetoImage a) {
        boolean contains = entityTextures.contains(a);
        return contains;
    }

    static int sizeOfEntityTextures() {
        int size = entityTextures.size();
        return size;
    }

    static ArrayList<MinuetoImage> getEntityTextures() {
        return this.entityTextures;
    }

    static boolean addPlayerTexturesAt(int index, MinuetoImage a) {
        boolean contains = playerTextures.contains(a);
        if (contains) {
            return false;
        }
        playerTextures.add(index, a);
        return true;
    }

    static boolean removePlayerTexturesAt(int index) {
        MinuetoImage removedElement = playerTextures.remove(index);
        boolean result = removedElement != null;
        return result;
    }

    static MinuetoImage getPlayerTexturesAt(int index) {
        MinuetoImage associated = playerTextures.get(index);
        return associated;
    }

    static boolean addPlayerTextures(MinuetoImage a) {
        boolean contains = playerTextures.contains(a);
        if (contains) {
            return false;
        }
        boolean added = playerTextures.add(a);
        return added;
    }

    static boolean removePlayerTextures(MinuetoImage a) {
        boolean removed = playerTextures.remove(a);
        return removed;
    }

    Assets() {
        
    }

    static boolean containsPlayerTextures(MinuetoImage a) {
        boolean contains = playerTextures.contains(a);
        return contains;
    }

    static int sizeOfPlayerTextures() {
        int size = playerTextures.size();
        return size;
    }

    static ArrayList<MinuetoImage> getPlayerTextures() {
        return this.playerTextures;
    }
}
