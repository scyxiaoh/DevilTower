package woven_tilebasedgameengine;

// Start of user code for imports
import java.util.*;
import org.minueto.image.MinuetoImage;
import org.minueto.window.MinuetoWindow;
// End of user code

/**
 * PauseScene class definition.
 * Generated by the TouchCORE code generator.
 */
class PauseScene extends Scene {
    
    protected long tick;
    protected int currentOption;
    protected CollectionOfAssociated options;
    
    public PauseScene() {
        /* TODO: No message view defined */
    }

    boolean removeOptions(MinuetoImage a) {
        int size = options.size();
        if (size == minimum) {
            return false;
        }
        boolean removed = options.remove(a);
        return removed;
    }

    boolean addOptionsAt(int index, MinuetoImage a) {
        options.add(index, a);
        return true;
    }

    boolean removeOptionsAt(int index) {
        int size = options.size();
        if (size == minimum) {
            return false;
        }
        MinuetoImage removedElement = options.remove(index);
        boolean result = removedElement != null;
        return result;
    }

    MinuetoImage getOptionsAt(int index) {
        MinuetoImage associated = options.get(index);
        return associated;
    }

    boolean addOptions(MinuetoImage a) {
        boolean added = options.add(a);
        return added;
    }

    PauseScene() {
        CollectionOfAssociated collection = new CollectionOfAssociated();
    }

    boolean containsOptions(MinuetoImage a) {
        boolean contains = options.contains(a);
        return contains;
    }

    int sizeOfOptions() {
        int size = options.size();
        return size;
    }

    CollectionOfAssociated getOptions() {
        return this.options;
    }

    public void update() {
        handleInput();
    }

    public void init() {
        /* TODO: No message view defined */
    }

    public void draw(MinuetoWindow w) {
        /* TODO: No message view defined */
    }

    public void handleInput() {
        SceneManager sM = SceneManager.getInstance();
        if (KeyboardHandler.isPressed(Keys.E)) {
            sM.setPaused(false);
        }
    }
}
